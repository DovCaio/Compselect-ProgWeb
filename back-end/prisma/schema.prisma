
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id Int @id @default(autoincrement())
  createAt DateTime @default(now())
  title    String @unique
  dateEvent DateTime
  time String
  description String
  target String[]
  activities String[]
  image String
  location Location?
}


model Location {
  id Int @id @default(autoincrement())
  country String
  city String
  street String
  number Int
  eventId Int @unique
  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
}



model Post {
  id Int @id @default(autoincrement())

  createAt DateTime @default(now())
  images String[]
  titles String[] 
    texts String[]
  links String[]
  sequenceOfContent Int[]
  comments Comment[]
}

model Comment {
  id Int @id @default(autoincrement())
  createAt DateTime @default(now())
  userName String?
  email String @unique
  accept Boolean
  postId Int
  post Post @relation(fields: [postId], references: [id])
}
model Author {
  id Int @id @default(autoincrement())
  createAt DateTime @default(now())
  firstName String
  lastName String
  image String
  bibliography String
  publications AuthorsOnPublications[]
}

model Publication {
  id Int @id @default(autoincrement())
  title String @unique
  image String
  authors AuthorsOnPublications[]
}

model AuthorsOnPublications {
  author Author @relation(fields: [authorId], references: [id])
  publication Publication @relation(fields: [publicationId], references: [id])
  authorId Int
  publicationId Int


  @@id([authorId, publicationId])
}

model Statistics {
  id Int @id @default(autoincrement())
  year Int
  month Int
  createAt DateTime @default(now())
  qttCreateEvents Int
  qttCreatePublications Int
  qttCreateAuthors Int
  qttCreatePost Int
  qttVisitors Int


  @@unique([year, month])
}